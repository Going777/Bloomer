/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 ./public/models/flowers/newf10.glb -t
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF, OrthographicCamera } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { useFrame } from "@react-three/fiber";

type GLTFResult = GLTF & {
  nodes: {
    f10_1: THREE.Mesh;
    f10_2: THREE.Mesh;
  };
  materials: {
    bell: THREE.MeshStandardMaterial;
    stem: THREE.MeshStandardMaterial;
  };
};

export function Model(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(
    "/models/flowers/newf10.glb"
  ) as GLTFResult;

  const modelRef1 = useRef<any>();
  const modelRef2 = useRef<any>();

  useFrame(() => {
    // modelRef1.current!.rotation.z += 0.01;
    // modelRef2.current!.rotation.z += 0.01;
  });

  return (
    <group {...props} dispose={null}>
      <group
        position={[0, -0.7, 0]}
        rotation={[-1.4, -0.2, -3.1]}
        // rotation={[0, 3, 0]}
        // rotation={[0.04, 0.46, -0.11]}
        scale={0.17}
      >
        <OrthographicCamera
          makeDefault={true}
          far={1000}
          near={0.1}
          // bottom={0}
          position={[30.37, 3.24, 30.16]}
          rotation={[-0.79, 0.62, 0.52]}
          zoom={30}
        />
        <mesh
          ref={modelRef1}
          geometry={nodes.f10_1.geometry}
          material={materials.bell}
        />

        <mesh
          ref={modelRef2}
          geometry={nodes.f10_2.geometry}
          material={materials.stem}
        />
        <axesHelper args={[5]} />
      </group>
    </group>
  );
}

// useGLTF.preload('/newf10.glb')
function NewF10() {
  return (
    // object3D: 빈 지역 공간
    <Model />
  );
}

export default NewF10;
