/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 ./public/models/test.gltf -t
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Cylinder073: THREE.Mesh
    Cylinder073_1: THREE.Mesh
    Cylinder073_2: THREE.Mesh
    Cylinder073_3: THREE.Mesh
  }
  materials: {
    ['Material.020']: THREE.MeshStandardMaterial
    ['Material.017']: THREE.MeshStandardMaterial
    stem: THREE.MeshStandardMaterial
    ['Material.019']: THREE.MeshStandardMaterial
  }
}

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/test.gltf') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group position={[0.39, 3.1, 8.95]} rotation={[-0.97, -0.39, -1.42]}>
        <mesh geometry={nodes.Cylinder073.geometry} material={materials['Material.020']} />
        <mesh geometry={nodes.Cylinder073_1.geometry} material={materials['Material.017']} />
        <mesh geometry={nodes.Cylinder073_2.geometry} material={materials.stem} />
        <mesh geometry={nodes.Cylinder073_3.geometry} material={materials['Material.019']} />
      </group>
    </group>
  )
}

useGLTF.preload('/test.gltf')
